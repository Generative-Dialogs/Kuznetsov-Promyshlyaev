<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="ru">
  <compounddef id="classsrc_1_1_image_generator_1_1_image_generator_protocol_1_1_image_generator_protocol" kind="class" language="Python" prot="public">
    <compoundname>src::ImageGenerator::ImageGeneratorProtocol::ImageGeneratorProtocol</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Protocol</basecompoundref>
    <derivedcompoundref refid="classsrc_1_1_image_generator_1_1_image_generator_google_1_1_image_generator_google" prot="public" virt="non-virtual">src.ImageGenerator.ImageGeneratorGoogle.ImageGeneratorGoogle</derivedcompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrc_1_1_image_generator_1_1_image_generator_protocol_1_1_image_generator_protocol_1a67dc32bad76939e2ba372be83049fcbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Optional[str]</type>
        <definition> Optional[str] src.ImageGenerator.ImageGeneratorProtocol.ImageGeneratorProtocol.generate_image_response</definition>
        <argsstring>(self, str prompt, str target_path, Optional[List[str]] character_images=None)</argsstring>
        <name>generate_image_response</name>
        <qualifiedname>src.ImageGenerator.ImageGeneratorProtocol.ImageGeneratorProtocol.generate_image_response</qualifiedname>
        <reimplementedby refid="classsrc_1_1_image_generator_1_1_image_generator_google_1_1_image_generator_google_1a3470aae404ebe3e833362ae57500e44f">generate_image_response</reimplementedby>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>str</type>
          <declname>prompt</declname>
        </param>
        <param>
          <type>str</type>
          <declname>target_path</declname>
        </param>
        <param>
          <type>Optional]</type>
          <declname>character_images</declname>
          <array>[List[str]</array>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Генерация изображения на основе промпта и опциональных изображений персонажей </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prompt</parametername>
</parameternamelist>
<parameterdescription>
<para>Текстовый промпт для генерации изображения </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Полный путь для сохранения изображения </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>character_images</parametername>
</parameternamelist>
<parameterdescription>
<para>Опциональный список путей к изображениям персонажей</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Optional[str] Путь к сохраненному изображению или None в случае ошибки </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/kir/Desktop/py/API/src/ImageGenerator/ImageGeneratorProtocol.py" line="12" column="1" bodyfile="C:/Users/kir/Desktop/py/API/src/ImageGenerator/ImageGeneratorProtocol.py" bodystart="12" bodyend="23"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Протокол для генерации изображений </para>
    </briefdescription>
    <detaileddescription>
<para>Определяет интерфейс для классов, реализующих генерацию изображений. Используется как контракт для различных реализаций генераторов изображений. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Protocol</label>
      </node>
      <node id="1">
        <label>src.ImageGenerator.ImageGeneratorProtocol.ImageGeneratorProtocol</label>
        <link refid="classsrc_1_1_image_generator_1_1_image_generator_protocol_1_1_image_generator_protocol"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>src.ImageGenerator.ImageGeneratorGoogle.ImageGeneratorGoogle</label>
        <link refid="classsrc_1_1_image_generator_1_1_image_generator_google_1_1_image_generator_google"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Protocol</label>
      </node>
      <node id="1">
        <label>src.ImageGenerator.ImageGeneratorProtocol.ImageGeneratorProtocol</label>
        <link refid="classsrc_1_1_image_generator_1_1_image_generator_protocol_1_1_image_generator_protocol"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/kir/Desktop/py/API/src/ImageGenerator/ImageGeneratorProtocol.py" line="4" column="1" bodyfile="C:/Users/kir/Desktop/py/API/src/ImageGenerator/ImageGeneratorProtocol.py" bodystart="4" bodyend="23"/>
    <listofallmembers>
      <member refid="classsrc_1_1_image_generator_1_1_image_generator_protocol_1_1_image_generator_protocol_1a67dc32bad76939e2ba372be83049fcbb" prot="public" virt="non-virtual"><scope>src::ImageGenerator::ImageGeneratorProtocol::ImageGeneratorProtocol</scope><name>generate_image_response</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
